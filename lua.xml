<?xml version="1.0" encoding="utf-8"?>
<ScintillaNET>
	<Language Name="lua">
		<AutoComplete FillUpCharacters=".([" SingleLineAccept="True" IsCaseSensitive="False">
			<List>
				and break do else elseif end false for function if 
				in local nil not or repeat return then true until while
				_VERSION assert collectgarbage dofile error gcinfo loadfile loadstring
				print rawget rawset require tonumber tostring type unpack
				assert collectgarbage dofile error gcinfo loadfile loadstring
				print rawget rawset require tonumber tostring type unpack
				_ALERT _ERRORMESSAGE _INPUT _PROMPT _OUTPUT 
				_STDERR _STDIN _STDOUT call dostring foreach foreachi getn globals newtype
				abs acos asin atan atan2 ceil cos deg exp 
				floor format frexp gsub ldexp log log10 max min mod rad random randomseed 
				sin sqrt strbyte strchar strfind strlen strlower strrep strsub strupper tan
				string.byte string.char string.dump string.find string.len 
string.lower string.rep string.sub string.upper string.format string.gfind string.gsub 
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn 
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp 
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod 
math.pi math.pow math.rad math.random math.randomseed math.sin math.sqrt math.tan 
string.gmatch string.match string.reverse table.maxn
math.cosh math.fmod math.modf math.sinh math.tanh math.huge
sort tinsert tremove
			</List>
		</AutoComplete>

		<Indentation TabWidth="4" SmartIndentType="cpp" />
			
		
		<Lexer LineCommentPrefix="--" StreamCommentPrefix="--[[ " StreamCommentSuffix=" ]]" >	
			<Keywords List="0" Inherit="False">
				and break do else elseif end false for function if 
				in local nil not or repeat return then true until while
				_VERSION assert collectgarbage dofile error gcinfo loadfile loadstring
				print rawget rawset require tonumber tostring type unpack
				assert collectgarbage dofile error gcinfo loadfile loadstring
				print rawget rawset require tonumber tostring type unpack
				_ALERT _ERRORMESSAGE _INPUT _PROMPT _OUTPUT 
				_STDERR _STDIN _STDOUT call dostring foreach foreachi getn globals newtype
				abs acos asin atan atan2 ceil cos deg exp 
				floor format frexp gsub ldexp log log10 max min mod rad random randomseed 
				sin sqrt strbyte strchar strfind strlen strlower strrep strsub strupper tan
				string.byte string.char string.dump string.find string.len 
			</Keywords>
			<Keywords List="1" Inherit="False">
				string.lower string.rep string.sub string.upper string.format string.gfind string.gsub 
table.concat table.foreach table.foreachi table.getn table.sort table.insert table.remove table.setn 
math.abs math.acos math.asin math.atan math.atan2 math.ceil math.cos math.deg math.exp 
math.floor math.frexp math.ldexp math.log math.log10 math.max math.min math.mod 
math.pi math.pow math.rad math.random math.randomseed math.sin math.sqrt math.tan 
string.gmatch string.match string.reverse table.maxn
math.cosh math.fmod math.modf math.sinh math.tanh math.huge
sort tinsert tremove
			</Keywords>
		</Lexer>
	</Language>
</ScintillaNET> 